<?php

namespace Nfq\NomNomBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MyUserEventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MyUserEventRepository extends EntityRepository
{
    public function findByEventAndUser($event, $user)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM NfqNomNomBundle:MyUserEvent m
            WHERE m.myEvent = :myevent AND m.myUser = :myuser')
            ->setParameters(array( 'myevent' => $event,
                                    'myuser' => $user))
            ->getResult();
    }

    public function findByEventHost($event)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM NfqNomNomBundle:MyUserEvent m
            WHERE m.myEvent = :myevent AND m.invitationStatus = 0')
            ->setParameter('myevent', $event)
            ->getResult();
    }

    public function findByEventInvited($event)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM NfqNomNomBundle:MyUserEvent m
            WHERE m.myEvent = :myevent AND m.invitationStatus = 1')
            ->setParameter('myevent', $event)
            ->getResult();
    }

    public function findByEventAccepted($event)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM NfqNomNomBundle:MyUserEvent m
            WHERE m.myEvent = :myevent AND m.invitationStatus = 2')
            ->setParameter('myevent', $event)
            ->getResult();
    }

    public function findByUserHost($user)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM NfqNomNomBundle:MyUserEvent m
            WHERE m.myUser = :myuser AND m.invitationStatus = 0')
            ->setParameter('myuser', $user)
            ->getResult();
    }

    public function findByUserInvited($user)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM NfqNomNomBundle:MyUserEvent m
            WHERE m.myUser = :myuser AND m.invitationStatus = 1')
            ->setParameter('myuser', $user)
            ->getResult();
    }

    public function findByUserAccepted($user)
    {
        return $this->getEntityManager()
            ->createQuery('SELECT m FROM NfqNomNomBundle:MyUserEvent m
            WHERE m.myUser = :myuser AND m.invitationStatus = 2')
            ->setParameter('myuser', $user)
            ->getResult();
    }
}
