<?php

namespace Nfq\NomNomBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MyRecipesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MyRecipeRepository extends EntityRepository
{

    /**
     * Returns total recipes count
     *
     * @return \Doctrine\ORM\Query
     */
    public function getRecipesCount()
    {
        $q = $this->createQueryBuilder('r')
            ->select('count(r.id)');

        return $q->getQuery()->getSingleScalarResult();
    }

    /**
     * Returns recipes query
     *
     * @return \Doctrine\ORM\Query
     */
    public function getRecipesQuery()
    {
        $q = $this->createQueryBuilder('r')
            ->select('r');

        return $q->getQuery();
    }



    public function filterByCategory($id1, $id2, $id3, $id4,$servfrom, $servto, $prepfrom, $prepto)
    {
        if ($id1){$id1 = 7;};
        if ($id2){$id2 = 8;};
        if ($id3){$id3 = 9;};
        if ($id4){$id4 = 10;};
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT p, c FROM NfqNomNomBundle:MyRecipe p
                JOIN p.myRecipeCategory c
                WHERE c.id = :id1 OR c.id = :id2 OR c.id = :id3 OR c.id = :id4
                AND p.numberOfServings >= :servfrom AND p.numberOfServings <= :servto
                AND p.preparationTime >= :prepfrom AND p.preparationTime <= :prepto
                '
            )->setParameter('id1', $id1)
            ->setParameter('id2', $id2)
            ->setParameter('id3', $id3)
            ->setParameter('id4', $id4)
            ->setParameter('servfrom', $servfrom)
            ->setParameter('servto', $servto)
            ->setParameter('prepfrom', $prepfrom)
            ->setParameter('prepto', $prepto)
        ;

        try {
            return $query->getResult();
        } catch (\Doctrine\ORM\NoResultException $e) {
            return null;
        }
    }
}
